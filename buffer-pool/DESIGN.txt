## How to make locking more fine-grained

Step 1: Stop holding lock during IO - after locking global hashtable, lock Page, unlock global hashtable
 -> go IO while holding only Page lock

Step 2: Observe that if memory pool is fixed size, then global hashtable can be also fixed size!
 -> This means that we can quite easily make it lock free

Page lock protocol:
- If pin_count > 0, then we can just use it (still need RwLock on data though)
- If pin_count == 0, then need to acquire control lock first

The above is quite simplistic, and causes much control lock acquiring when the system is mostly idle (pages are not pinned).
Can make it more sophisticated by squeezing in an additional state (LOCKED) to the pin count word.

Step 3: can we get rid of the page data RwLock?
