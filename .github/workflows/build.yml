name: build

on: [push, pull_request]

env:
  CI: "1"

# Taken from https://github.com/swc-project/swc/blob/master/.github/workflows/cargo.yml

jobs:
  test-buffer-pool:
    name: test-buffer-pool
    runs-on: ubuntu-latest
    env:
      CRATE: buffer-pool
    steps:
      - uses: actions/checkout@v2
      - run: git submodule update --init

      # Ensure that all components all compilable.
      - name: Run cargo check for all targets
        run: cd $CRATE && cargo check --color always --all --all-targets

      - name: Run cargo test
        run: cd $CRATE && cargo test --color always --all

      - name: Run cargo test with cfg(loom)
        run: cd $CRATE && RUSTFLAGS='--cfg loom --cfg loom_nightly' cargo test --color always --lib

  test-table:
    name: test-table
    runs-on: ubuntu-latest
    env:
      CRATE: table
    steps:
      - uses: actions/checkout@v2
      - run: git submodule update --init

      # Ensure that all components all compilable.
      - name: Run cargo check for all targets
        run: cd $CRATE && cargo check --color always --all --all-targets

      - name: Run cargo test
        run: cd $CRATE && cargo test --color always --all

  test-chan:
    name: test-chan
    runs-on: ubuntu-latest
    env:
      CRATE: chan
    steps:
      - uses: actions/checkout@v2
      - run: git submodule update --init

      # Ensure that all components all compilable.
      - name: Run cargo check for all targets
        run: cd $CRATE && cargo check --color always --all --all-targets

      - name: Run cargo test
        run: cd $CRATE && cargo test --color always --all

      - name: Run cargo bench
        run: cd $CRATE && cargo bench --color always

      - name: Run cargo test with cfg(loom)
        run: cd $CRATE && RUSTFLAGS='--cfg loom --cfg loom_nightly' cargo test --color always --lib

  test-db:
    name: test-db
    runs-on: ubuntu-latest
    env:
      CRATE: db
    steps:
      - uses: actions/checkout@v2
      - run: git submodule update --init

      # Ensure that all components all compilable.
      - name: Run cargo check for all targets
        run: cd $CRATE && cargo check --color always --all --all-targets

      - name: Run cargo test
        run: cd $CRATE && cargo test --color always --all

  lint:
    name: lint
    runs-on: ubuntu-latest
    env:
      CRATE: db
    steps:
      - uses: actions/checkout@v2
      - run: git submodule update --init
      - name: Install stuff
        run: rustup component add rustfmt clippy
      - name: Run cargo clippy
        run: cd $CRATE && cargo clippy -- -Dwarnings
      - name: Run cargo fmt
        run: cd $CRATE && cargo fmt --all -- --check
